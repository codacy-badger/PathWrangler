#if !canImport(ObjectiveC)
import XCTest

extension AbsolutePathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AbsolutePathTests = [
        ("testAutoCreatedStorage", testAutoCreatedStorage),
        ("testCurrent", testCurrent),
        ("testResolvingWithoutSymlinks", testResolvingWithoutSymlinks),
        ("testResolvingWithSymlinks", testResolvingWithSymlinks),
        ("testRoot", testRoot),
        ("testStorageAssignment", testStorageAssignment),
        ("testStorageCopyingWhenNonUniquelyReferenced", testStorageCopyingWhenNonUniquelyReferenced),
        ("testStorageCopyingWhenUniquelyReferenced", testStorageCopyingWhenUniquelyReferenced),
        ("testTemp", testTemp),
    ]
}

extension PathComponentConvertibleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathComponentConvertibleTests = [
        ("testBinaryIntegerConformance", testBinaryIntegerConformance),
        ("testFloatingPointConformance", testFloatingPointConformance),
        ("testRawRepresentableConformance", testRawRepresentableConformance),
        ("testStaticStringConformance", testStaticStringConformance),
        ("testStringConformance", testStringConformance),
    ]
}

extension PathElementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathElementTests = [
        ("testAppendingExtensions", testAppendingExtensions),
        ("testCreationFromString", testCreationFromString),
        ("testInitialization", testInitialization),
        ("testPathComponentConvertibleConformance", testPathComponentConvertibleConformance),
        ("testRemovingPathExtensions", testRemovingPathExtensions),
        ("testSimplifactionAction", testSimplifactionAction),
    ]
}

extension PathStorageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathStorageTests = [
        ("testAppending", testAppending),
        ("testCopying", testCopying),
        ("testElementsUpdateResetsPathStringStorage", testElementsUpdateResetsPathStringStorage),
        ("testInitialization", testInitialization),
        ("testLastPathElement", testLastPathElement),
        ("testLastSafeSubsciptIndex", testLastSafeSubsciptIndex),
        ("testPathStringCaching", testPathStringCaching),
        ("testResolvingWithoutSymlinks", testResolvingWithoutSymlinks),
        ("testResolvingWithSymlinks", testResolvingWithSymlinks),
    ]
}

extension RelativePathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RelativePathTests = [
        ("testAutoCreatedStorage", testAutoCreatedStorage),
        ("testCurrent", testCurrent),
        ("testNestingInAbsolute", testNestingInAbsolute),
        ("testResolving", testResolving),
        ("testStorageAssignment", testStorageAssignment),
        ("testStorageCopyingWhenNonUniquelyReferenced", testStorageCopyingWhenNonUniquelyReferenced),
        ("testStorageCopyingWhenUniquelyReferenced", testStorageCopyingWhenUniquelyReferenced),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AbsolutePathTests.__allTests__AbsolutePathTests),
        testCase(PathComponentConvertibleTests.__allTests__PathComponentConvertibleTests),
        testCase(PathElementTests.__allTests__PathElementTests),
        testCase(PathStorageTests.__allTests__PathStorageTests),
        testCase(RelativePathTests.__allTests__RelativePathTests),
    ]
}
#endif
